generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  videos    Video[]
  comments  Comment[]
  likes     Like[]
  views     View[]
  createdAt DateTime  @default(now())
}

model Video {
  id          String    @id @default(cuid())
  title       String
  description String?
  url         String
  thumbnail   String?
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  comments    Comment[]
  likes       Like[]
  views       View[]
  isBlocked   Boolean   @default(false)
  createdAt   DateTime  @default(now())
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade) // onDelete тут
  videoId   String
  createdAt DateTime @default(now())
}

model Like {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  video     Video    @relation(fields: [videoId], references: [id], onDelete: Cascade) // onDelete тут
  videoId   String
  createdAt DateTime @default(now())

  @@unique([userId, videoId]) // один лайк на одне відео
}

model View {
  id        String    @id @default(cuid())
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  video     Video     @relation(fields: [videoId], references: [id], onDelete: Cascade) // onDelete тут
  videoId   String
  createdAt DateTime  @default(now())

  @@unique([userId, videoId])
}

enum Role {
  USER
  ADMIN
}